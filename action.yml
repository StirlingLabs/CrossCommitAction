name: 'GitHub Cross-Commit'
description: 'Cross commits files from the base repository to another repo.'

branding:
  icon: "git-commit"
  color: "blue"

inputs:
  source-folder:
    description: "Sub folder of the repository to copy"
    required: true
  destination-repository:
    description: "Repository to be commited to. In case of private repository, state with access token as a secret"
    required: true
  destination-folder:
    description: "Sub folder of the repository to copy into"
    required: true
  destination-branch:
    description: "Branch of the destination repository to commit to"
    required: true
    default: "alpha"
  git-commit-message:
    description: "Custom commit message to use"
    default: ""
    required: false
  git-commit-sign-off:
    description: "Sign-off commit"
    default: "false"
    required: false
  excludes:
    description: "Optionally exclude some directories from being synced in both src and dst. The value is treated as column separated list, e.g. skip_dir_in_src:.git:skip_dir_in_dst"
    required: false
runs:
  
  using: "composite"
  
  steps: 
    - shell: bash
      run: ${{ github.action_path }}/action.sh
      env:
        SOURCE: ${{ inputs.source-folder }}
        REPO: ${{ inputs.destination-repository }}
        TARGET: ${{ inputs.destination-folder }}
        BRANCH: ${{ inputs.destination-branch }}
        GIT_USER: ${{ inputs.git-user }}
        GIT_EMAIL: ${{ inputs.git-user-email }}
        GIT_COMMIT_MSG: ${{ inputs.git-commit-message }}
        GIT_COMMIT_SIGN_OFF: ${{ inputs.git-commit-sign-off }}
        excludes: ${{ inputs.excludes }}
